{
  "address": "0xa50aE32C1536FD79554d62a89165188F454Cc80e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_outbox",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_securityModule",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "destinationDomain",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "recipient",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "SentMessage",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "interchainSecurityModule",
      "outputs": [
        {
          "internalType": "contract IInterchainSecurityModule",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_destinationDomain",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_recipient",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "sendString",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_destinationDomain",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_recipientAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "sendStringToAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x421193ea7840f657ab9eb6dafbc166c8dd4eda5760498166e0bb61490d3fdb4b",
  "receipt": {
    "to": null,
    "from": "0x2a1F5eB3e84e58e6F1e565306298B9dE1273f203",
    "contractAddress": "0xa50aE32C1536FD79554d62a89165188F454Cc80e",
    "transactionIndex": 0,
    "gasUsed": "9717765",
    "logsBloom": "0x
    "blockHash": "0xd6622b098aa8e444420492414a0daea259cd5f6be8959a9ac8d0c56a04bcef70",
    "transactionHash": "0x421193ea7840f657ab9eb6dafbc166c8dd4eda5760498166e0bb61490d3fdb4b",
    "logs": [],
    "blockNumber": 1981547,
    "cumulativeGasUsed": "9717765",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE640d54Ece415eC9dc42A70AB89a136884c15Bf4",
    "0x8728ad841d6f25c69d421e15B549Fb6E6125e069"
  ],
  "numDeployments": 8,
  "solcInputHash": "1f8e39f1c86d11f0bbe764bc81d12f70",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_outbox\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_securityModule\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"SentMessage\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"interchainSecurityModule\",\"outputs\":[{\"internalType\":\"contract IInterchainSecurityModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_recipient\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"sendString\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_recipientAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"sendStringToAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HyperlaneMessageSender.sol\":\"HyperlaneMessageSender\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@hyperlane-xyz/core/contracts/interfaces/IInterchainSecurityModule.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.6.11;\\n\\ninterface IInterchainSecurityModule {\\n    enum Types {\\n        UNUSED,\\n        ROUTING,\\n        AGGREGATION,\\n        LEGACY_MULTISIG,\\n        MERKLE_ROOT_MULTISIG,\\n        MESSAGE_ID_MULTISIG,\\n        NULL, // used with relayer carrying no metadata\\n        CCIP_READ\\n    }\\n\\n    /**\\n     * @notice Returns an enum that represents the type of security model\\n     * encoded by this ISM.\\n     * @dev Relayers infer how to fetch and format metadata.\\n     */\\n    function moduleType() external view returns (uint8);\\n\\n    /**\\n     * @notice Defines a security model responsible for verifying interchain\\n     * messages based on the provided metadata.\\n     * @param _metadata Off-chain metadata provided by a relayer, specific to\\n     * the security model encoded by the module (e.g. validator signatures)\\n     * @param _message Hyperlane encoded interchain message\\n     * @return True if the message was verified\\n     */\\n    function verify(\\n        bytes calldata _metadata,\\n        bytes calldata _message\\n    ) external returns (bool);\\n}\\n\\ninterface ISpecifiesInterchainSecurityModule {\\n    function interchainSecurityModule()\\n        external\\n        view\\n        returns (IInterchainSecurityModule);\\n}\\n\",\"keccak256\":\"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce\",\"license\":\"MIT OR Apache-2.0\"},\"@hyperlane-xyz/core/contracts/interfaces/IMailbox.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.8.0;\\n\\nimport {IInterchainSecurityModule} from \\\"./IInterchainSecurityModule.sol\\\";\\nimport {IPostDispatchHook} from \\\"./hooks/IPostDispatchHook.sol\\\";\\n\\ninterface IMailbox {\\n    // ============ Events ============\\n    /**\\n     * @notice Emitted when a new message is dispatched via Hyperlane\\n     * @param sender The address that dispatched the message\\n     * @param destination The destination domain of the message\\n     * @param recipient The message recipient address on `destination`\\n     * @param message Raw bytes of message\\n     */\\n    event Dispatch(\\n        address indexed sender,\\n        uint32 indexed destination,\\n        bytes32 indexed recipient,\\n        bytes message\\n    );\\n\\n    /**\\n     * @notice Emitted when a new message is dispatched via Hyperlane\\n     * @param messageId The unique message identifier\\n     */\\n    event DispatchId(bytes32 indexed messageId);\\n\\n    /**\\n     * @notice Emitted when a Hyperlane message is processed\\n     * @param messageId The unique message identifier\\n     */\\n    event ProcessId(bytes32 indexed messageId);\\n\\n    /**\\n     * @notice Emitted when a Hyperlane message is delivered\\n     * @param origin The origin domain of the message\\n     * @param sender The message sender address on `origin`\\n     * @param recipient The address that handled the message\\n     */\\n    event Process(\\n        uint32 indexed origin,\\n        bytes32 indexed sender,\\n        address indexed recipient\\n    );\\n\\n    function localDomain() external view returns (uint32);\\n\\n    function delivered(bytes32 messageId) external view returns (bool);\\n\\n    function defaultIsm() external view returns (IInterchainSecurityModule);\\n\\n    function defaultHook() external view returns (IPostDispatchHook);\\n\\n    function requiredHook() external view returns (IPostDispatchHook);\\n\\n    function latestDispatchedId() external view returns (bytes32);\\n\\n    function dispatch(\\n        uint32 destinationDomain,\\n        bytes32 recipientAddress,\\n        bytes calldata messageBody\\n    ) external payable returns (bytes32 messageId);\\n\\n    function quoteDispatch(\\n        uint32 destinationDomain,\\n        bytes32 recipientAddress,\\n        bytes calldata messageBody\\n    ) external view returns (uint256 fee);\\n\\n    function dispatch(\\n        uint32 destinationDomain,\\n        bytes32 recipientAddress,\\n        bytes calldata body,\\n        bytes calldata defaultHookMetadata\\n    ) external payable returns (bytes32 messageId);\\n\\n    function quoteDispatch(\\n        uint32 destinationDomain,\\n        bytes32 recipientAddress,\\n        bytes calldata messageBody,\\n        bytes calldata defaultHookMetadata\\n    ) external view returns (uint256 fee);\\n\\n    function dispatch(\\n        uint32 destinationDomain,\\n        bytes32 recipientAddress,\\n        bytes calldata body,\\n        bytes calldata customHookMetadata,\\n        IPostDispatchHook customHook\\n    ) external payable returns (bytes32 messageId);\\n\\n    function quoteDispatch(\\n        uint32 destinationDomain,\\n        bytes32 recipientAddress,\\n        bytes calldata messageBody,\\n        bytes calldata customHookMetadata,\\n        IPostDispatchHook customHook\\n    ) external view returns (uint256 fee);\\n\\n    function process(\\n        bytes calldata metadata,\\n        bytes calldata message\\n    ) external payable;\\n\\n    function recipientIsm(\\n        address recipient\\n    ) external view returns (IInterchainSecurityModule module);\\n}\\n\",\"keccak256\":\"0x9cd728ba304279775818f8c7b4c02f8c5dd2b28e051ec466dbe36129be01a6ee\",\"license\":\"MIT OR Apache-2.0\"},\"@hyperlane-xyz/core/contracts/interfaces/hooks/IPostDispatchHook.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.8.0;\\n\\n/*@@@@@@@       @@@@@@@@@\\n @@@@@@@@@       @@@@@@@@@\\n  @@@@@@@@@       @@@@@@@@@\\n   @@@@@@@@@       @@@@@@@@@\\n    @@@@@@@@@@@@@@@@@@@@@@@@@\\n     @@@@@  HYPERLANE  @@@@@@@\\n    @@@@@@@@@@@@@@@@@@@@@@@@@\\n   @@@@@@@@@       @@@@@@@@@\\n  @@@@@@@@@       @@@@@@@@@\\n @@@@@@@@@       @@@@@@@@@\\n@@@@@@@@@       @@@@@@@@*/\\n\\ninterface IPostDispatchHook {\\n    enum Types {\\n        UNUSED,\\n        ROUTING,\\n        AGGREGATION,\\n        MERKLE_TREE,\\n        INTERCHAIN_GAS_PAYMASTER,\\n        FALLBACK_ROUTING,\\n        ID_AUTH_ISM,\\n        PAUSABLE,\\n        PROTOCOL_FEE,\\n        LAYER_ZERO_V1\\n    }\\n\\n    /**\\n     * @notice Returns an enum that represents the type of hook\\n     */\\n    function hookType() external view returns (uint8);\\n\\n    /**\\n     * @notice Returns whether the hook supports metadata\\n     * @param metadata metadata\\n     * @return Whether the hook supports metadata\\n     */\\n    function supportsMetadata(\\n        bytes calldata metadata\\n    ) external view returns (bool);\\n\\n    /**\\n     * @notice Post action after a message is dispatched via the Mailbox\\n     * @param metadata The metadata required for the hook\\n     * @param message The message passed from the Mailbox.dispatch() call\\n     */\\n    function postDispatch(\\n        bytes calldata metadata,\\n        bytes calldata message\\n    ) external payable;\\n\\n    /**\\n     * @notice Compute the payment required by the postDispatch call\\n     * @param metadata The metadata required for the hook\\n     * @param message The message passed from the Mailbox.dispatch() call\\n     * @return Quoted payment for the postDispatch call\\n     */\\n    function quoteDispatch(\\n        bytes calldata metadata,\\n        bytes calldata message\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x29201c5597a02b691be7815554a9a2815198bb8b76b061c1f4f6daf77d5d1d75\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/HyperlaneMessageSender.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\nimport \\\"@hyperlane-xyz/core/contracts/interfaces/IMailbox.sol\\\";\\nimport { IInterchainSecurityModule } from \\\"@hyperlane-xyz/core/contracts/interfaces/IInterchainSecurityModule.sol\\\";\\n\\ninterface ISpecifiesInterchainSecurityModule {\\n\\tfunction interchainSecurityModule()\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (IInterchainSecurityModule);\\n}\\n\\ncontract HyperlaneMessageSender is ISpecifiesInterchainSecurityModule {\\n\\tIMailbox outbox;\\n\\tIInterchainSecurityModule securityModule;\\n\\tstring public version = \\\"1.0.0\\\";\\n\\n\\n\\tevent SentMessage(\\n\\t\\tuint32 destinationDomain,\\n\\t\\tbytes32 recipient,\\n\\t\\tstring message\\n\\t);\\n\\n\\tconstructor(address _outbox, address _securityModule) {\\n\\t\\toutbox = IMailbox(_outbox);\\n\\t\\tsecurityModule = IInterchainSecurityModule(_securityModule);\\n\\t}\\n\\n\\tfunction addressToBytes32(address _addr) internal pure returns (bytes32) {\\n\\t\\treturn bytes32(uint256(uint160(_addr)));\\n\\t}\\n\\n\\tfunction sendStringToAddress(\\n\\t\\tuint32 _destinationDomain,\\n\\t\\taddress _recipientAddress,\\n\\t\\tstring calldata _message\\n\\t) external {\\n\\t\\tbytes32 _recipient = addressToBytes32(_recipientAddress);\\n\\t\\tuint256 fee = outbox.quoteDispatch(\\n\\t\\t\\t_destinationDomain,\\n\\t\\t\\t_recipient,\\n\\t\\t\\tbytes(_message)\\n\\t\\t);\\n\\t\\toutbox.dispatch{ value: fee }(\\n\\t\\t\\t_destinationDomain,\\n\\t\\t\\t_recipient,\\n\\t\\t\\tbytes(_message)\\n\\t\\t);\\n\\t\\temit SentMessage(_destinationDomain, _recipient, _message);\\n\\t}\\n\\n\\tfunction sendString(\\n\\t\\tuint32 _destinationDomain,\\n\\t\\tbytes32 _recipient,\\n\\t\\tstring calldata _message\\n\\t) external {\\n\\t\\tuint256 fee = outbox.quoteDispatch(\\n\\t\\t\\t_destinationDomain,\\n\\t\\t\\t_recipient,\\n\\t\\t\\tbytes(_message)\\n\\t\\t);\\n\\t\\toutbox.dispatch{ value: fee }(\\n\\t\\t\\t_destinationDomain,\\n\\t\\t\\t_recipient,\\n\\t\\t\\tbytes(_message)\\n\\t\\t);\\n\\t\\temit SentMessage(_destinationDomain, _recipient, _message);\\n\\t}\\n\\n\\tfunction interchainSecurityModule()\\n\\t\\texternal\\n\\t\\tview\\n\\t\\toverride\\n\\t\\treturns (IInterchainSecurityModule)\\n\\t{\\n\\t\\treturn securityModule;\\n\\t}\\n}\\n\",\"keccak256\":\"0x2c72547942b303c46aefc60b68384825097b400fa7dc1836136f06dbf23b18d1\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60c060405260056080908152640312e302e360dc1b60a0526002906100249082610120565b5034801561003157600080fd5b50604051610836380380610836833981016040819052610050916101fb565b600080546001600160a01b039384166001600160a01b0319918216179091556001805492909316911617905561022e565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100ab57607f821691505b6020821081036100cb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011b57600081815260208120601f850160051c810160208610156100f85750805b601f850160051c820191505b8181101561011757828155600101610104565b5050505b505050565b81516001600160401b0381111561013957610139610081565b61014d816101478454610097565b846100d1565b602080601f831160018114610182576000841561016a5750858301515b600019600386901b1c1916600185901b178555610117565b600085815260208120601f198616915b828110156101b157888601518255948401946001909101908401610192565b50858210156101cf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b03811681146101f657600080fd5b919050565b6000806040838503121561020e57600080fd5b610217836101df565b9150610225602084016101df565b90509250929050565b6105f98061023d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806354fd4d5014610051578063a9d2c6d41461006f578063aafa0a8714610084578063de523cf314610097575b600080fd5b6100596100b2565b60405161006691906103b6565b60405180910390f35b61008261007d366004610466565b610140565b005b6100826100923660046104d5565b61027d565b6001546040516001600160a01b039091168152602001610066565b600280546100bf90610517565b80601f01602080910402602001604051908101604052809291908181526020018280546100eb90610517565b80156101385780601f1061010d57610100808354040283529160200191610138565b820191906000526020600020905b81548152906001019060200180831161011b57829003601f168201915b505050505081565b6000805460405163138857a360e31b81526001600160a01b0386811693921690639c42bd189061017a90899086908990899060040161057a565b602060405180830381865afa158015610197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bb91906105aa565b60005460405163fa31de0160e01b81529192506001600160a01b03169063fa31de019083906101f4908a9087908a908a9060040161057a565b60206040518083038185885af1158015610212573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061023791906105aa565b507f10875372a03b7e5c7d46deb548b112c09c576e378c8f2daa3370a5cbe58c41b68683868660405161026d949392919061057a565b60405180910390a1505050505050565b6000805460405163138857a360e31b81526001600160a01b0390911690639c42bd18906102b490889088908890889060040161057a565b602060405180830381865afa1580156102d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f591906105aa565b60005460405163fa31de0160e01b81529192506001600160a01b03169063fa31de0190839061032e90899089908990899060040161057a565b60206040518083038185885af115801561034c573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061037191906105aa565b507f10875372a03b7e5c7d46deb548b112c09c576e378c8f2daa3370a5cbe58c41b6858585856040516103a7949392919061057a565b60405180910390a15050505050565b600060208083528351808285015260005b818110156103e3578581018301518582016040015282016103c7565b506000604082860101526040601f19601f8301168501019250505092915050565b803563ffffffff8116811461041857600080fd5b919050565b60008083601f84011261042f57600080fd5b50813567ffffffffffffffff81111561044757600080fd5b60208301915083602082850101111561045f57600080fd5b9250929050565b6000806000806060858703121561047c57600080fd5b61048585610404565b935060208501356001600160a01b03811681146104a157600080fd5b9250604085013567ffffffffffffffff8111156104bd57600080fd5b6104c98782880161041d565b95989497509550505050565b600080600080606085870312156104eb57600080fd5b6104f485610404565b935060208501359250604085013567ffffffffffffffff8111156104bd57600080fd5b600181811c9082168061052b57607f821691505b60208210810361054b57634e487b7160e01b600052602260045260246000fd5b50919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b63ffffffff851681528360208201526060604082015260006105a0606083018486610551565b9695505050505050565b6000602082840312156105bc57600080fd5b505191905056fea26469706673582212201d730bfce9005cb454cb16f36e7ba4e7fbee0b314912caf3585d679bd272c63e64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806354fd4d5014610051578063a9d2c6d41461006f578063aafa0a8714610084578063de523cf314610097575b600080fd5b6100596100b2565b60405161006691906103b6565b60405180910390f35b61008261007d366004610466565b610140565b005b6100826100923660046104d5565b61027d565b6001546040516001600160a01b039091168152602001610066565b600280546100bf90610517565b80601f01602080910402602001604051908101604052809291908181526020018280546100eb90610517565b80156101385780601f1061010d57610100808354040283529160200191610138565b820191906000526020600020905b81548152906001019060200180831161011b57829003601f168201915b505050505081565b6000805460405163138857a360e31b81526001600160a01b0386811693921690639c42bd189061017a90899086908990899060040161057a565b602060405180830381865afa158015610197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bb91906105aa565b60005460405163fa31de0160e01b81529192506001600160a01b03169063fa31de019083906101f4908a9087908a908a9060040161057a565b60206040518083038185885af1158015610212573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061023791906105aa565b507f10875372a03b7e5c7d46deb548b112c09c576e378c8f2daa3370a5cbe58c41b68683868660405161026d949392919061057a565b60405180910390a1505050505050565b6000805460405163138857a360e31b81526001600160a01b0390911690639c42bd18906102b490889088908890889060040161057a565b602060405180830381865afa1580156102d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f591906105aa565b60005460405163fa31de0160e01b81529192506001600160a01b03169063fa31de0190839061032e90899089908990899060040161057a565b60206040518083038185885af115801561034c573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061037191906105aa565b507f10875372a03b7e5c7d46deb548b112c09c576e378c8f2daa3370a5cbe58c41b6858585856040516103a7949392919061057a565b60405180910390a15050505050565b600060208083528351808285015260005b818110156103e3578581018301518582016040015282016103c7565b506000604082860101526040601f19601f8301168501019250505092915050565b803563ffffffff8116811461041857600080fd5b919050565b60008083601f84011261042f57600080fd5b50813567ffffffffffffffff81111561044757600080fd5b60208301915083602082850101111561045f57600080fd5b9250929050565b6000806000806060858703121561047c57600080fd5b61048585610404565b935060208501356001600160a01b03811681146104a157600080fd5b9250604085013567ffffffffffffffff8111156104bd57600080fd5b6104c98782880161041d565b95989497509550505050565b600080600080606085870312156104eb57600080fd5b6104f485610404565b935060208501359250604085013567ffffffffffffffff8111156104bd57600080fd5b600181811c9082168061052b57607f821691505b60208210810361054b57634e487b7160e01b600052602260045260246000fd5b50919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b63ffffffff851681528360208201526060604082015260006105a0606083018486610551565b9695505050505050565b6000602082840312156105bc57600080fd5b505191905056fea26469706673582212201d730bfce9005cb454cb16f36e7ba4e7fbee0b314912caf3585d679bd272c63e64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 357,
        "contract": "contracts/HyperlaneMessageSender.sol:HyperlaneMessageSender",
        "label": "outbox",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IMailbox)201"
      },
      {
        "astId": 360,
        "contract": "contracts/HyperlaneMessageSender.sol:HyperlaneMessageSender",
        "label": "securityModule",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IInterchainSecurityModule)27"
      },
      {
        "astId": 363,
        "contract": "contracts/HyperlaneMessageSender.sol:HyperlaneMessageSender",
        "label": "version",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_contract(IInterchainSecurityModule)27": {
        "encoding": "inplace",
        "label": "contract IInterchainSecurityModule",
        "numberOfBytes": "20"
      },
      "t_contract(IMailbox)201": {
        "encoding": "inplace",
        "label": "contract IMailbox",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}